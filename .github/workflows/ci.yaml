name: Django CI/CD with Docker Compose

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build and run containers
      run: |
        cp .env.example .env.prod && docker-compose -f docker-compose.prod.yml up -d --build

    - name: Run tests
      run: |
        docker-compose -f docker-compose.prod.yml run web sh -c "python manage.py test"

  push:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Build image
      run: |
        docker build . ${{ github.ref_name }}

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker images
      uses: docker/build-push-action@v4
      with:
        compose-file: docker-compose.prod.yml
        push: true
        tags: djwoms/fatcode:latest

  deploy:
    needs: push
    runs-on: ubuntu-latest

    steps:
    - name: Configure SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        PRODUCTION_SERVER_IP: ${{ secrets.PRODUCTION_SERVER_IP }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan $PRODUCTION_SERVER_IP >> ~/.ssh/authorized_keys

    - name: Deploy to production
      env:
        PRODUCTION_SERVER_IP: ${{ secrets.PRODUCTION_SERVER_IP }}
        PRODUCTION_SERVER_USER: ${{ secrets.PRODUCTION_SERVER_USER}}
        PRODUCTION_SERVER_PASS: ${{ secrets.PRODUCTION_SERVER_PASS}}
        PRODUCTION_SERVER_PATH: ${{ secrets.PRODUCTION_SERVER_PATH}}
      run: |
         sshpass -p "$PRODUCTION_SERVER_PASS" ssh -o StrictHostKeyChecking=no $PRODUCTION_SERVER_USER@$PRODUCTION_SERVER_IP "cd $PRODUCTION_SERVER_PATH && docker pull djwoms/fatcode:latest && docker-compose -f docker-compose.prod.yml up -d"
#        # Deploy to production server
#        ssh-keyscan -H $PRODUCTION_SERVER_IP >> ~/home/.ssh/authorized_keys
#        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#        chmod 600 ~/.ssh/id_rsa
#        rsync -avz --delete ./ $PRODUCTION_SERVER_USER@$PRODUCTION_SERVER_IP:$PRODUCTION_SERVER_PATH
#        ssh $PRODUCTION_SERVER_USER@$PRODUCTION_SERVER_IP "cd $PRODUCTION_SERVER_PATH && docker-compose pull && docker-compose -f docker-compose.prod.yml up -d"
